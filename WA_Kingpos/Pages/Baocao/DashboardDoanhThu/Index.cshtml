@page
@using WA_Kingpos.Data;
@model IndexModel
@{
    ViewData["Company"] = "KDL SUỐI TIÊN";
    ViewData["Name"] = "dashboarddoanhthu";

    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
        
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.1/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    
    <link rel="stylesheet" href="~/plugins/fontawesome-free/css/all.min.css">


    <style>
        .pagination {
            justify-content: center;
        }

        .pagination .active a {
            background-color: #007bff;
            color: white;
        }
    </style>

    <script>
        var reloadInterval;  // Store interval reference
        var countdownInterval;  // Store countdown interval reference

        window.onload = function () {
            var storedTime = localStorage.getItem('reloadTime');
            if (storedTime) {
                document.getElementById('reloadTime').value = storedTime;
                startAutoReload(); 
            }
        }

        function startAutoReload() {
            var seconds = document.getElementById('reloadTime').value;
            var countdownValueElement = document.getElementById('countdownValue');

            if (seconds && !isNaN(seconds) && seconds > 0) {
                countdownValueElement.innerHTML = seconds;

                localStorage.setItem('reloadTime', seconds);

                clearInterval(reloadInterval);
                clearInterval(countdownInterval);

                countdownInterval = setInterval(function () {
                    seconds--;
                    countdownValueElement.innerHTML = seconds;

                    if (seconds <= 0) {
                        clearInterval(countdownInterval);
                        location.reload();
                    }
                }, 1000);

                reloadInterval = setInterval(function () {
                    location.reload();
                }, localStorage.getItem('reloadTime') * 1000);
            } else {
                alert('Please enter a valid number greater than 0');
            }
        }

        function showFormattedDateTime() {
            
            var now = new Date();

            var day = String(now.getDate()).padStart(2, '0');
            var month = String(now.getMonth() + 1).padStart(2, '0');
            var year = now.getFullYear();

            var time = now.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });

            var formattedDate = day + '/' + month + '/' + year;
            var formattedDateTime = formattedDate + ' ' + time;

            document.getElementById("dateTime").innerHTML = formattedDateTime;
        }
        
        setInterval(showFormattedDateTime, 1000);
        document.addEventListener("DOMContentLoaded", function () {
            var rowsPerPage = 12;
            var rows = $('#dashboardTable tbody tr');
            var rowsCount = rows.length;
            var pageCount = Math.ceil(rowsCount / rowsPerPage);
            var maxVisiblePages = 3;

            var pagination = $('#pagination');

            if (rowsCount === 0) {
                return;
            }

            function updatePagination() {
                $('#pagination').empty();

                var startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));
                var endPage = Math.min(pageCount, startPage + maxVisiblePages - 1);

                if (startPage > 1) {
                    pagination.append('<li class="page-item"><a class="page-link" href="#">1</a></li><li class="page-item disabled"><a class="page-link" href="#">...</a></li>');
                }

                for (var i = startPage; i <= endPage; i++) {
                    console.log('Generating page:', i);
                    pagination.append('<li class="page-item"><a class="page-link" href="#">' + i + '</a></li>');
                }

                if (endPage < pageCount) {
                    pagination.append('<li class="page-item disabled"><a class="page-link" href="#">...</a></li><li class="page-item"><a class="page-link" href="#">' + pageCount + '</a></li>');
                }

                console.log('Pagination HTML:', pagination.html());

                $('#pagination li').removeClass('active');
                $('#pagination li').filter(function () {
                    return $(this).text() == currentPage;
                }).addClass('active');
            }

            function showPage(page) {
                currentPage = page;

                rows.hide();
                var start = (page - 1) * rowsPerPage;
                var end = start + rowsPerPage;

                rows.slice(start, end).show();

                updatePagination();

                $('#firstPage, #prevPage').toggleClass('disabled', currentPage === 1);
                $('#nextPage, #lastPage').toggleClass('disabled', currentPage === pageCount);
            }

            if (pageCount > 0) {
                showPage(1);
            } else {
                $('#pagination').hide();
            }

            $(document).on('click', '#pagination li a', function (e) {
                e.preventDefault();
                var page = $(this).text();
                if (!isNaN(page)) {
                    showPage(parseInt(page));
                }
            });

            $('#firstPage').click(function (e) {
                e.preventDefault();
                showPage(1);
            });

            $('#prevPage').click(function (e) {
                e.preventDefault();
                if (currentPage > 1) {
                    showPage(currentPage - 1);
                }
            });

            $('#nextPage').click(function (e) {
                e.preventDefault();
                if (currentPage < pageCount) {
                    showPage(currentPage + 1);
                }
            });

            $('#lastPage').click(function (e) {
                e.preventDefault();
                showPage(pageCount);
            });

            document.getElementById('selectAll').addEventListener('change', function () {
                var checkboxes = document.querySelectorAll('.store-checkbox');
                for (var i = 0; i < checkboxes.length; i++) {
                    checkboxes[i].checked = this.checked;
                }
            });

            var screenHeight = window.innerHeight;
            var screenWidth = window.innerWidth;

            const hiddenColumns = document.querySelectorAll('.hidden-column');
            const smallerHeader = document.querySelectorAll('.smaller-h6');
            const smallerDate = document.querySelectorAll('.smaller-date');
            if (screenHeight > screenWidth) {
                hiddenColumns.forEach(function (element) {
                    console.log('none');
                    element.style.display = 'none';
                });
                smallerHeader.forEach(function (h3) {
                    var h6 = document.createElement('h6');

                    h6.innerHTML = h3.innerHTML;
                    h6.classList.add('text-center');
                    h6.style.color = '#ffffff';

                    h3.parentNode.replaceChild(h6, h3);
                });
                smallerDate.forEach(function (dt){
                    var date = document.createElement('h6');

                    date.id = 'dateTime';
                    date.style.color = '#ffffff';
                    dt.parentNode.replaceChild(date, dt);
                });
            }
        });
    </script>
</head>
<body>
    <div class="row m-2">
        <div class="col-12">
            <div class="mt-2">
                <div class="mt-2 row" style="background-color: #009999">
                    <div class="col-2">
                        <h2 class="text-center smaller-h6" style="color: #ffffff;">KDL SUỐI TIÊN</h2>
                    </div>
                    <div class="col-1">
                        <button type="button" class="btn" style="background-color: #009999" data-toggle="collapse" data-target="#dropdownBox" aria-expanded="false" aria-controls="dropdownBox">
                            <i class="fas fa-list" style="color: #ffffff;"></i>
                        </button>
                    </div>
                    <div class="col-5">
                        <h2 class="text-center smaller-h6" style="color: #ffffff;">DOANH THU TRỰC TUYẾN</h2>
                    </div>
                    <div class="col-2">
                        <h3><p><span class="smaller-date" id="dateTime" style="color: #ffffff;"></span></p></h3>
                    </div>
                    <div class="col-1">
                        <h3 class="hidden-column" style="color: #ffffff;"><label id="countdownLabel">(</label><span id="countdownValue">0</span>)</h3>
                    </div>
                    <div class="col-1">
                        <p><img src="~/images/KingPos-for-Ticket.png" class="img-fluid"/></p>
                    </div>
                    <form method="post" asp-page-handler="Filter">
                        <div class="collapse mt-3" id="dropdownBox">
                            <div style="display: flex; flex-wrap: wrap;">
                                <div style="margin-right: 20px;">
                                    <input type="checkbox" id="selectAll" checked />
                                    <label style="color: #ffffff" for="selectAll">Tất cả</label>
                                </div>

                                @for (int i = 0; i < Model.ListCuaHang.Count; i++)
                                {
                                    <div style="margin-right: 20px;">
                                        <input type="checkbox" asp-for="ListCuaHang[i].IsSelected" class="store-checkbox" id="store-@i" checked />
                                        <label style="color: #ffffff" for="store-@i">@Model.ListCuaHang[i].Ten</label>
                                        <input type="hidden" asp-for="ListCuaHang[i].Ma" /> 
                                        <input type="hidden" asp-for="ListCuaHang[i].Ten" />
                                    </div>
                                }

                                <button type="submit" class="btn btn-light btn-sm mb-1 ml-1" onclick="startCountdown()">Lọc</button>
                                
                            </div>
                            <div class="col-3">
                                <div class="row">
                                    <input asp-for="ReloadTime" class="form-control form-control-sm" type="number" placeholder="Enter seconds" id="reloadTime" />
                                    @* <label asp-for="ReloadTime" class="form-label"></label> *@
                                    <span asp-validation-for="ReloadTime"></span>

                                    <button type="button" class="btn btn-sm btn-primary" onclick="startAutoReload()">Reload</button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <div class="row mt-2">
                <table class="table table-bordered table-hover table-striped" id="dashboardTable">
                    <thead style="background-color: #00ccff">
                        <tr>
                            <th class="text-center" style="width: 20%;"><h3>Cửa hàng</h3></th>
                            <th class="text-center" style="width: 15%;"><h3>Quầy</h3></th>
                            <th class="text-center hidden-column" style="width: 20%;"><h3>Dịch vụ</h3></th>
                            <th class="text-center hidden-column" style="width: 10%;"><h3>Số lượng</h3></th>
                            <th class="text-center hidden-column" style="width: 10%;"><h3>Đơn giá</h3></th>
                            <th class="text-center" style="width: 10%;"><h3>Tổng tiền</h3></th>
                            <th class="text-center hidden-column" style="width: 15%;"><h3>Giờ bán</h3></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.setsDashboard)
                        {
                            if(item.tongTien < 0)
                            {
                                <tr style="background-color: #ff0000;">
                                    <td style="">@item.tenCuaHang</td>
                                    <td>@item.tenQuay</td>
                                    <td class="hidden-column">@item.tenHangHoa</td>
                                    <td class="text-center hidden-column">@item.soLuong.ToString("N0")</td>
                                    <td class="text-center hidden-column">@item.giaBanThat.ToString("N0")</td>
                                    <td class="text-center">@item.tongTien.ToString("N0")</td>
                                    <td class="text-center hidden-column">@item.ngayTao.ToString()</td>
                                </tr>
                            }
                            else
                            {
                                if (item.stt % 2 == 1)
                                {
                                    <tr style="background-color: #ffffff;">
                                        <td class="font-weight-bold">@item.tenCuaHang</td>
                                        <td class="font-weight-bold">@item.tenQuay</td>
                                        <td class="hidden-column font-weight-bold">@Html.Raw(@item.tenHangHoa)</td>
                                        <td class="text-center hidden-column font-weight-bold">@item.soLuong.ToString("N0")</td>
                                        <td class="text-center hidden-column font-weight-bold">@item.giaBanThat.ToString("N0")</td>
                                        <td style="background-color:#e6faff" class="text-center font-weight-bold">@item.tongTien.ToString("N0")</td>
                                        <td class="text-center hidden-column font-weight-bold">@item.ngayTao.ToString()</td>
                                    </tr>
                                }
                                else
                                {
                                    <tr style="background-color: #e6faff;">
                                        <td class="font-weight-bold">@item.tenCuaHang</td>
                                        <td class="font-weight-bold">@item.tenQuay</td>
                                        <td class="hidden-column font-weight-bold">@Html.Raw(@item.tenHangHoa)</td>
                                        <td class="text-center hidden-column font-weight-bold">@item.soLuong.ToString("N0")</td>
                                        <td class="text-center hidden-column font-weight-bold">@item.giaBanThat.ToString("N0")</td>
                                        <td style="background-color:#b3f0ff" class="text-center font-weight-bold">@item.tongTien.ToString("N0")</td>
                                        <td class="text-center hidden-column font-weight-bold">@item.ngayTao.ToString()</td>
                                    </tr>
                                }
                            }
                        }
                    </tbody>
                </table>
            </div>
            <div class="row mt-2 justify-content-center">
                <nav aria-label="Page navigation">
                    <ul class="pagination" id="pagination">
                    </ul>
                </nav>
            </div>
            <div class="row mt-2 justify-content-center">
                <div class="col mr-1 rounded bg-danger text-white text-center hidden-column">
                    <h3>Hủy/ Trả</h3>
                    <h3>@Model.huytra.ToString("N0")</h3>
                </div>
                <div class="col mr-1 rounded text-white text-center" style="background-color: #00ccff">
                    <h3 class="smaller-h6">Tiền Mặt</h3>
                    <h3 class="smaller-h6">@Model.tienmat.ToString("N0")</h3>
                </div>
                <div class="col mr-1 rounded text-white text-center" style="background-color: #00ccff">
                    <h3 class="smaller-h6">Ngân hàng</h3>
                    <h3 class="smaller-h6">@Model.nganhang.ToString("N0")</h3>
                </div>
                <div class="col mr-1 rounded text-white text-center" style="background-color: #00ccff">
                    <h3 class="smaller-h6">Khác</h3>
                    <h3 class="smaller-h6">@Model.khac.ToString("N0")</h3>
                </div>
                <div class="col mr-1 rounded text-white text-center" style="background-color: #00ccff">
                    <h3 class="smaller-h6">Tổng doanh thu</h3>
                    <h3 class="smaller-h6">@Model.tongcong.ToString("N0")</h3>
                </div>
            </div>
        </div>
    </div>
</body>
</html>


